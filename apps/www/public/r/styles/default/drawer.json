{
  "name": "drawer",
  "type": "registry:ui",
  "dependencies": [
    "vaul",
    "@radix-ui/react-dialog"
  ],
  "files": [
    {
      "path": "ui/drawer.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { cva } from \"class-variance-authority\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype DrawerContextProps = {\n  direction: \"left\" | \"right\" | \"top\" | \"bottom\"\n}\n\nconst DrawerContext = React.createContext<DrawerContextProps | null>(null)\n\nfunction useDrawer() {\n  const context = React.useContext(DrawerContext)\n\n  if (!context) {\n    throw new Error(\"useDrawer must be used within a <DrawerContainer />\")\n  }\n\n  return context\n}\n\nconst drawerVariants = cva(\n  \"fixed z-50 flex h-auto flex-col border bg-background\",\n  {\n    variants: {\n      direction: {\n        bottom: \"bottom-0 mt-24 rounded-t-[10px]\",\n        left: \"inset-y-0 left-0 w-fit rounded-r-[10px]\",\n        right: \"inset-y-0 right-0 w-fit rounded-l-[10px]\",\n        top: \"top-0\",\n      },\n    },\n    defaultVariants: {\n      direction: \"bottom\",\n    },\n  }\n)\n\nconst Drawer = ({\n  shouldScaleBackground = false,\n  direction = \"bottom\",\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerContext.Provider value={{ direction }}>\n    <DrawerPrimitive.Root\n      direction={direction}\n      shouldScaleBackground={shouldScaleBackground}\n      {...props}\n    />\n  </DrawerContext.Provider>\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerNested = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.NestedRoot\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => {\n  const { direction } = useDrawer()\n  return (\n    <DrawerPortal>\n      <DrawerOverlay />\n      <DrawerPrimitive.Content\n        ref={ref}\n        className={drawerVariants({ direction, className })}\n        {...props}\n      >\n        {direction === \"bottom\" ? (\n          <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n        ) : null}\n        {children}\n      </DrawerPrimitive.Content>\n    </DrawerPortal>\n  )\n})\n\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-4 grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerNested,\n  DrawerTitle,\n  DrawerDescription,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
{
  "name": "avatar-group",
  "files": [
    {
      "name": "avatar-group.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface AvatarGroupProps {\n  className?: string\n  orientation?: \"horizontal\" | \"vertical\"\n  limit?: number\n  children: React.ReactNode\n}\n\nexport const AvatarGroup = React.forwardRef<HTMLDivElement, AvatarGroupProps>(\n  (\n    { children, className = \"\", orientation = \"horizontal\", limit, ...props },\n    ref\n  ) => {\n    const childrenArray = React.Children.toArray(children)\n    const limitedChildren = limit\n      ? childrenArray.slice(0, limit)\n      : childrenArray\n\n    const styledChildren = React.Children.map(\n      limitedChildren,\n      (child, index) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child as React.ReactElement, {\n            className: cn(\n              \"relative flex h-10 w-10 shrink-0 items-center justify-center overflow-hidden rounded-full border-2 border-background bg-background text-foreground\",\n              child.props.className\n            ),\n            style: {\n              zIndex: index !== 0 ? index : undefined,\n              margin:\n                index > 0\n                  ? orientation === \"horizontal\"\n                    ? \"0 0 0 -0.75rem\"\n                    : \"0 -0.75rem 0 0\"\n                  : undefined,\n            },\n          })\n        }\n        return child\n      }\n    )\n\n    if (limit && childrenArray.length > limit) {\n      styledChildren.push(\n        <span\n          key=\"more\"\n          className=\"relative z-10 -ml-3 flex h-10 w-10 shrink-0 items-center justify-center overflow-hidden rounded-full border-2 border-background bg-secondary text-foreground\"\n        >\n          +{childrenArray.length - limit}\n        </span>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex select-none\",\n          orientation === \"vertical\" ? \"flex-col\" : \"flex-row\",\n          className\n        )}\n        {...props}\n      >\n        {styledChildren}\n      </div>\n    )\n  }\n)\n\nAvatarGroup.displayName = \"AvatarGroup\"\n"
    }
  ],
  "type": "components:ui"
}
{
  "name": "input number",
  "files": [
    {
      "name": "input-number.tsx",
      "content": "\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\"\nimport { Minus, Plus } from \"lucide-react\";\n\nimport { Button } from \"@/registry/default/ui/button\";\n\nenum NumberEvents {\n    PLUS = \"plus\",\n    MINUS = \"minus\",\n}\n\nexport interface InputNumberProp extends React.InputHTMLAttributes<HTMLInputElement> {\n    className?: string;\n    min?: number;\n    max?: number;\n    step?: number;\n}\n\nconst InputNumber = React.forwardRef<HTMLInputElement, InputNumberProp>(\n    ({ className, min, max, step, ...props }, ref) => {\n\n        function handleNumberEvent(type: NumberEvents = NumberEvents.PLUS) {\n            const currentValue = Number(props.value) || 0;\n            const action = type === NumberEvents.PLUS ? 1 : -1;\n            const newValue = Number((currentValue + action * Number(step || 1)).toFixed(2));\n\n            if ((min && newValue < min) || (max && newValue > max)) {\n                return;\n            }\n\n            props.onChange?.({\n                target: {\n                    value: newValue\n                }\n            } as unknown as React.ChangeEvent<HTMLInputElement>);\n        }\n\n        return (\n            <div className={cn('relative flex w-full items-center', className)}>\n                <input\n                    type={\"number\"}\n                    className=\"mr-2 flex h-10 w-full appearance-none rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    ref={ref}\n                    min={min}\n                    max={max}\n                    step={step}\n                    {...props}\n                />\n                <div className=\"absolute right-2 top-0\">\n                    <Button\n                        variant=\"outline\"\n                        type=\"button\"\n                        className=\"rounded-none\"\n                        onClick={() => handleNumberEvent(NumberEvents.PLUS)}\n                    >\n                        <Plus className=\"h-4 w-4\" />\n                    </Button>\n                    <Button\n                        variant=\"outline\"\n                        type=\"button\"\n                        className=\"rounded-l-none border-l-0\"\n                        onClick={() => handleNumberEvent(NumberEvents.MINUS)}\n                    >\n                        <Minus className=\"h-4 w-4\" />\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n);\n\nInputNumber.displayName = \"Input Number\";\n\nexport { InputNumber };"
    }
  ],
  "type": "components:ui"
}
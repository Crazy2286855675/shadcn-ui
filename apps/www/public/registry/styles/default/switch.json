{
  "name": "switch",
  "dependencies": [
    "@radix-ui/react-switch"
  ],
  "files": [
    {
      "name": "switch.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\nimport { VariantProps, cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport const switchVariants = cva(\n  \"peer inline-flex shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n  {\n    variants: {\n      size: {\n        sm: \"h-[20px] w-[40px]\",\n        base: \"h-[24px] w-[44px]\",\n        lg: \"h-[28px] w-[48px]\",\n      },\n    },\n    defaultVariants: { size: \"base\" },\n  }\n)\n\nconst switchThumbVariants = cva(\n  \"pointer-events-none block rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\n  {\n    variants: {\n      size: {\n        sm: \"h-4 w-4\",\n        base: \"h-5 w-5\",\n        lg: \"h-6 w-6\",\n      },\n    },\n    defaultVariants: { size: \"base\" },\n  }\n)\n\nexport interface SwitchProps\n  extends React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>,\n    VariantProps<typeof switchVariants> {}\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  SwitchProps\n>(({ className, size, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(switchVariants({ size, className }))}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb className={cn(switchThumbVariants({ size }))} />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"
    }
  ],
  "type": "components:ui"
}